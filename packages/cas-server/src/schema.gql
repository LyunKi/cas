type LoginRsp {
  st: String!
  tgt: String!
}

input LoginReq {
  account: String!
  service: String!
  password: String!
}

type LogoutReq {
  st: String!
  service: String!
  invalidateTgtFlag: Boolean
}

input SendSmsReq {
  mobile: String!
}

input CreateUserReq {
  password: String!
  mobile: String!
  verificationCode: String!
  service: String
}

type CreateUserRsp {
  id: ID!
}

type Mutation {
  sendSms(req: SendSmsReq!): String!
  register(req: CreateUserReq!): CreateUserRsp!
  login(req: LoginReq!): LoginRsp!
}

type Query {
  ping: String!
}
